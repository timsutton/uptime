# buildifier: disable=module-docstring
# we explicitly use platforms for //src/swift
bazel_dep(name = "platforms", version = "0.0.10")

# apple_support must be declared before rules_cc, and we use rules_cc for the c uptime target
# https://github.com/bazelbuild/rules_cc/pull/199
bazel_dep(name = "apple_support", version = "1.17.1", repo_name = "build_bazel_apple_support")
bazel_dep(name = "rules_cc", version = "0.1.0")

# golang
bazel_dep(name = "rules_go", version = "0.51.0")
bazel_dep(name = "gazelle", version = "0.40.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.23.1")

# kotlin
bazel_dep(name = "rules_kotlin", version = "2.1.0")
bazel_dep(name = "rules_graalvm", version = "0.11.1")

# rules_graalvm hasn't yet published 0.11.2 to BCR
archive_override(
    module_name = "rules_graalvm",
    integrity = "sha256-JweZfVu+CFIYM0Q78qJpUbyj+uBbb/l8983xDK0/vCA=",
    strip_prefix = "rules_graalvm-7c53c1a1ddf82fd775be2fc62d22783ec2ba4326",
    urls = ["https://github.com/sgammon/rules_graalvm/archive/7c53c1a1ddf82fd775be2fc62d22783ec2ba4326.tar.gz"],
)

gvm = use_extension("@rules_graalvm//:extensions.bzl", "graalvm")

# https://www.graalvm.org/release-calendar/
gvm.graalvm(
    name = "graalvm",
    distribution = "ce",  # `oracle`, `ce`, or `community`
    java_version = "22",  # `17`, `20`, `21`, or `22` as supported by the version provided
    version = "24.0.1",  # gvm sdk version format like `24.x.x` also supported
)
use_repo(gvm, "graalvm")

register_toolchains("@graalvm//:jvm")

register_toolchains("@graalvm//:sdk")

bazel_dep(name = "rules_jvm_external", version = "6.6")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "com.github.oshi:oshi-core:6.6.1",
    ],
)
use_repo(maven, "maven")

# rust
bazel_dep(name = "rules_rust", version = "0.56.0")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    sha256s = {
        "rustc-1.82.0-aarch64-apple-darwin.tar.xz": "ca9b9cab552c86ac7a28d8fb757c95a363bb5d6413b854b19472950eab2a9fa4",
        "clippy-1.82.0-aarch64-apple-darwin.tar.xz": "bd1ba77f237df9e9dac704d5195281e0baec4509facd347ff716d793b131bbaa",
        "cargo-1.82.0-aarch64-apple-darwin.tar.xz": "66b9acc4629a21896ebd96076016263461567b8faf4eb0b76d0a72614790f29a",
        "rust-std-1.82.0-aarch64-apple-darwin.tar.xz": "8b0786c55e02f3adc5df030861b6b60bc336326b9e372f6b1bf3040257621a90",
    },
    versions = ["1.82.0"],
)

crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.spec(
    package = "libc",
    version = "0.2.159",
)
crate.from_specs(name = "crates")
use_repo(crate, "crates")

# ruby
bazel_dep(name = "rules_ruby", version = "0.16.0")

ruby = use_extension("@rules_ruby//ruby:extensions.bzl", "ruby")
ruby.toolchain(
    name = "ruby",
    # set ruby_build_version when rules_ruby hasn't yet caught up
    ruby_build_version = "20241225.2",
    version = "3.4.1",
)
ruby.bundle_fetch(
    name = "bundle",
    gem_checksums = {
        "ast-2.4.2": "1e280232e6a33754cde542bc5ef85520b74db2aac73ec14acef453784447cc12",
        "ffi-1.17.1": "26f6b0dbd1101e6ffc09d3ca640b2a21840cc52731ad8a7ded9fb89e5fb0fc39",
        "ffi-1.17.1-arm64-darwin": "a8e04f79d375742c54ee7f9fff4b4022b87200a4ec0eb082128d3b6559e67b4d",
        "json-2.9.1": "d2bdef4644052fad91c1785d48263756fe32fcac08b96a20bb15840e96550d11",
        "language_server-protocol-3.17.0.3": "3d5c58c02f44a20d972957a9febe386d7e7468ab3900ce6bd2b563dd910c6b3f",
        "parallel-1.26.3": "d86babb7a2b814be9f4b81587bf0b6ce2da7d45969fab24d8ae4bf2bb4d4c7ef",
        "parser-3.3.6.0": "25d4e67cc4f0f7cab9a2ae1f38e2005b6904d2ea13c34734511d0faad038bc3b",
        "racc-1.8.1": "4a7f6929691dbec8b5209a0b373bc2614882b55fc5d2e447a21aaa691303d62f",
        "rainbow-3.1.1": "039491aa3a89f42efa1d6dec2fc4e62ede96eb6acd95e52f1ad581182b79bc6a",
        "regexp_parser-2.10.0": "cb6f0ddde88772cd64bff1dbbf68df66d376043fe2e66a9ef77fcb1b0c548c61",
        "rubocop-1.69.2": "762fb0f30a379bf6054588d39f1815a2a1df8f067bc0337d3fe500e346924bb8",
        "rubocop-ast-1.37.0": "9513ac88aaf113d04b52912533ffe46475de1362d4aa41141b51b2455827c080",
        "ruby-progressbar-1.13.0": "80fc9c47a9b640d6834e0dc7b3c94c9df37f08cb072b7761e4a71e22cff29b33",
        "unicode-display_width-2.6.0": "12279874bba6d5e4d2728cef814b19197dbb10d7a7837a869bab65da943b7f5a",
    },
    gemfile = "//src/rb:Gemfile",
    gemfile_lock = "//src/rb:Gemfile.lock",
)
use_repo(ruby, "bundle", "ruby", "ruby_toolchains")

register_toolchains("@ruby_toolchains//:all")

# python
bazel_dep(name = "rules_python", version = "1.0.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.13",
)

# swift
bazel_dep(name = "rules_swift", version = "2.3.1", repo_name = "build_bazel_rules_swift")
single_version_override(
    module_name = "rules_swift",
    patch_strip = 1,
    patches = [
        # Based on https://github.com/bazelbuild/rules_swift/pull/706
        "//src/swift/patches:swift-static-lib.patch",
    ],
)

# zig
bazel_dep(name = "rules_zig", version = "0.6.1")

zig = use_extension(
    "@rules_zig//zig:extensions.bzl",
    "zig",
)
zig.toolchain(zig_version = "0.13.0")

# linting
bazel_dep(name = "aspect_rules_lint", version = "1.0.8")

bazel_dep(
    name = "buildifier_prebuilt",
    version = "7.3.1",
    dev_dependency = True,
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "swiftformat_mac",
    build_file_content = "filegroup(name = \"swiftformat_mac\", srcs=[\"swiftformat\"], visibility=[\"//visibility:public\"])",
    sha256 = "c252ba7109b247ad4e172a7a20ced02f0f9132ffdf379ca1cd8e360272950836",
    url = "https://github.com/nicklockwood/SwiftFormat/releases/download/0.55.4/swiftformat.zip",
)

http_archive(
    name = "swiftformat",
    build_file_content = "filegroup(name = \"swiftformat\", srcs=[\"swiftformat_linux\"], visibility=[\"//visibility:public\"])",
    patch_cmds = ["chmod u+x swiftformat_linux"],
    sha256 = "f62813980c2848cb1941f1456a2a06251c2e2323183623760922058b98c70745",
    url = "https://github.com/nicklockwood/SwiftFormat/releases/download/0.55.4/swiftformat_linux.zip",
)
