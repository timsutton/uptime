# we explicitly use platforms for //src/swift
bazel_dep(name = "platforms", version = "0.0.9")

# standalone LLVM
bazel_dep(name = "toolchains_llvm", version = "1.0.0")

# Override toolchains_llvm to newer Git sha. Currently up in the air as to who will maintain
# the module in BCR: https://github.com/bazel-contrib/toolchains_llvm/issues/298
archive_override(
    module_name = "toolchains_llvm",
    integrity = "sha256-iMhJcaAL7BM1sioDuNroe/F+CYFstC8ICRkKDNhtzKo=",
    strip_prefix = "toolchains_llvm-2f58ae4a90f9d1b2a359ba3636fc449ccf578bce",
    urls = ["https://github.com/bazel-contrib/toolchains_llvm/archive/2f58ae4a90f9d1b2a359ba3636fc449ccf578bce.tar.gz"],
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_versions = {
        "darwin-x86_64": "15.0.7",
        "linux-aarch64": "18.1.2",
        "": "17.0.6",
    },
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# golang
bazel_dep(name = "rules_go", version = "0.46.0")
bazel_dep(name = "gazelle", version = "0.36.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.2")

# rust
bazel_dep(name = "rules_rust", version = "0.42.1")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    versions = ["1.77.2"],
)

crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.spec(
    package = "libc",
    version = "0.2",
)
crate.from_specs(name = "crates")
use_repo(crate, "crates")

# ruby
bazel_dep(name = "rules_ruby", version = "0.9.1")

ruby = use_extension("@rules_ruby//ruby:extensions.bzl", "ruby")
ruby.toolchain(
    name = "ruby",
    version = "3.3.0",
    # alternatively, load version from .ruby-version file
    # version_file = "//:.ruby-version",
)
ruby.bundle_fetch(
    name = "bundle",
    gemfile = "//:Gemfile",
    gemfile_lock = "//:Gemfile.lock",
)
use_repo(ruby, "bundle", "ruby", "ruby_toolchains")

register_toolchains("@ruby_toolchains//:all")

# python
bazel_dep(name = "rules_python", version = "0.31.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = "3.12",
)

# swift

bazel_dep(name = "rules_swift", version = "1.18.0", repo_name = "build_bazel_rules_swift")
