# we explicitly use platforms for //src/swift
bazel_dep(name = "platforms", version = "0.0.10")

# standalone LLVM
bazel_dep(name = "toolchains_llvm", version = "1.0.0")

# Override toolchains_llvm to newer Git sha. Currently up in the air as to who will maintain
# the module in BCR: https://github.com/bazel-contrib/toolchains_llvm/issues/298
archive_override(
    module_name = "toolchains_llvm",
    integrity = "sha256-1SXIvezw090Cfbxfto5ldOpnGO1pxbfUW2yX66iG158=",
    strip_prefix = "toolchains_llvm-a1a5013732b30b1c0b03e904726106a301913ec0",
    urls = ["https://github.com/bazel-contrib/toolchains_llvm/archive/a1a5013732b30b1c0b03e904726106a301913ec0.tar.gz"],
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_versions = {
        "darwin-x86_64": "15.0.7",
        "": "18.1.8",
    },
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# golang
bazel_dep(name = "rules_go", version = "0.50.0")
bazel_dep(name = "gazelle", version = "0.38.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.3")

# kotlin
bazel_dep(name = "rules_kotlin", version = "1.9.6")
bazel_dep(name = "rules_graalvm", version = "0.11.1")

# rules_graalvm hasn't yet published 0.11.2 to BCR
archive_override(
    module_name = "rules_graalvm",
    integrity = "sha256-JweZfVu+CFIYM0Q78qJpUbyj+uBbb/l8983xDK0/vCA=",
    strip_prefix = "rules_graalvm-7c53c1a1ddf82fd775be2fc62d22783ec2ba4326",
    urls = ["https://github.com/sgammon/rules_graalvm/archive/7c53c1a1ddf82fd775be2fc62d22783ec2ba4326.tar.gz"],
)

gvm = use_extension("@rules_graalvm//:extensions.bzl", "graalvm")
gvm.graalvm(
    name = "graalvm",
    distribution = "ce",  # `oracle`, `ce`, or `community`
    java_version = "22",  # `17`, `20`, `21`, or `22` as supported by the version provided
    version = "24.0.1",  # gvm sdk version format like `24.x.x` also supported
)
use_repo(gvm, "graalvm")

register_toolchains("@graalvm//:jvm")

register_toolchains("@graalvm//:sdk")

bazel_dep(name = "rules_jvm_external", version = "6.2")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "com.github.oshi:oshi-core:6.6.1",
    ],
)
use_repo(maven, "maven")

# rust
bazel_dep(name = "rules_rust", version = "0.49.3")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    sha256s = {
        "rustc-1.80.0-aarch64-apple-darwin.tar.xz": "367d9cf73cc4f4b719c843b81a241f5c68a41f798b781026606703d166265a87",
        "clippy-1.80.0-aarch64-apple-darwin.tar.xz": "57637a2277e2daa21eeb8bb468ed1fde788de121682a04d07a5d416f33b0db38",
        "cargo-1.80.0-aarch64-apple-darwin.tar.xz": "517950591429dbc2bca8efb9f94e1a9dda9f1d16392f7885e3f81ddd31525659",
        "llvm-tools-1.80.0-aarch64-apple-darwin.tar.xz": "12b209304b19c50494d628a608c680521d3836133f00fbd479d2ac49b9a2c3b8",
        "rust-std-1.80.0-aarch64-apple-darwin.tar.xz": "d2f124d495ed92715ebcb21ba6677b304472098427f21795aacdbd4b24f04808",
    },
    versions = ["1.80.0"],
)

crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.spec(
    package = "libc",
    version = "0.2.158",
)
crate.from_specs(name = "crates")
use_repo(crate, "crates")

# ruby
bazel_dep(name = "rules_ruby", version = "0.11.0")

# Remove after next rules_ruby release, improves rule setup time
archive_override(
    module_name = "rules_ruby",
    integrity = "sha256-I92IccEW2bh22mUqO4/ZzmDO2p7bRey/GhNgtgHwug8=",
    strip_prefix = "rules_ruby-95941212c6c63a9bc4e7b5723ffc281c30451ff6",
    urls = ["https://github.com/bazel-contrib/rules_ruby/archive/95941212c6c63a9bc4e7b5723ffc281c30451ff6.tar.gz"],
)

ruby = use_extension("@rules_ruby//ruby:extensions.bzl", "ruby")
ruby.toolchain(
    name = "ruby",
    # Overridden for rb 3.3.5
    ruby_build_version = "20240903",
    version = "3.3.5",
)
ruby.bundle_fetch(
    name = "bundle",
    gem_checksums = {
        "ast-2.4.2": "1e280232e6a33754cde542bc5ef85520b74db2aac73ec14acef453784447cc12",
        "ffi-1.17.0": "51630e43425078311c056ca75f961bb3bda1641ab36e44ad4c455e0b0e4a231c",
        "ffi-1.17.0-arm64-darwin": "609c874e76614542c6d485b0576e42a7a38ffcdf086612f9a300c4ec3fcd0d12",
        "json-2.7.2": "1898b5cbc81cd36c0fd4d0b7ad2682c39fb07c5ff682fc6265f678f550d4982c",
        "language_server-protocol-3.17.0.3": "3d5c58c02f44a20d972957a9febe386d7e7468ab3900ce6bd2b563dd910c6b3f",
        "parallel-1.25.1": "12e089b9aa36ea2343f6e93f18cfcebd031798253db8260590d26a7f70b1ab90",
        "parser-3.3.3.0": "a2e23c90918d9b7e866b18dca2b6835f227769dd2fa8e59c5841f3389cf53eeb",
        "racc-1.8.0": "09349a65c37c4fe710a435f25c9f1652e39f29ad6b1fa08d4a8d30c0553d3a08",
        "rainbow-3.1.1": "039491aa3a89f42efa1d6dec2fc4e62ede96eb6acd95e52f1ad581182b79bc6a",
        "regexp_parser-2.9.2": "5a27e767ad634f8a4b544520d5cd28a0db7aa1198a5d7c9d7e11d7b3d9066446",
        "rexml-3.3.1": "34af9fb38eff6c451abd187c53fded98378aa91766d4c62fbbce10e40ed7c325",
        "rubocop-1.64.1": "3145bf1863771e400a1c041060e751e5ff0edd9ceb99d01df36db1902f611f3b",
        "rubocop-ast-1.31.3": "1b07d618d8776993ec6053a706d1c09f0bf15139fd69415924656cbff07e7818",
        "ruby-progressbar-1.13.0": "80fc9c47a9b640d6834e0dc7b3c94c9df37f08cb072b7761e4a71e22cff29b33",
        "strscan-3.1.0": "01b8a81d214fbf7b5308c6fb51b5972bbfc4a6aa1f166fd3618ba97e0fcd5555",
        "unicode-display_width-2.5.0": "7e7681dcade1add70cb9fda20dd77f300b8587c81ebbd165d14fd93144ff0ab4",
    },
    gemfile = "//src/rb:Gemfile",
    gemfile_lock = "//src/rb:Gemfile.lock",
)
use_repo(ruby, "bundle", "ruby", "ruby_toolchains")

register_toolchains("@ruby_toolchains//:all")

# python
bazel_dep(name = "rules_python", version = "0.35.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.12",
)

# swift

bazel_dep(name = "rules_swift", version = "2.1.1", repo_name = "build_bazel_rules_swift")
single_version_override(
    module_name = "rules_swift",
    patch_strip = 1,
    patches = [
        # Based on https://github.com/bazelbuild/rules_swift/pull/706
        "//src/swift/patches:swift-static-lib.patch",
    ],
)

# zig
bazel_dep(name = "rules_zig", version = "0.5.0")

zig = use_extension(
    "@rules_zig//zig:extensions.bzl",
    "zig",
)
zig.toolchain(zig_version = "0.13.0")
