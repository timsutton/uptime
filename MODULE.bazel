# we explicitly use platforms for //src/swift
bazel_dep(name = "platforms", version = "0.0.10")

# standalone LLVM
bazel_dep(name = "toolchains_llvm", version = "1.0.0")

# Override toolchains_llvm to newer Git sha. Currently up in the air as to who will maintain
# the module in BCR: https://github.com/bazel-contrib/toolchains_llvm/issues/298
archive_override(
    module_name = "toolchains_llvm",
    integrity = "sha256-iMhJcaAL7BM1sioDuNroe/F+CYFstC8ICRkKDNhtzKo=",
    strip_prefix = "toolchains_llvm-2f58ae4a90f9d1b2a359ba3636fc449ccf578bce",
    urls = ["https://github.com/bazel-contrib/toolchains_llvm/archive/2f58ae4a90f9d1b2a359ba3636fc449ccf578bce.tar.gz"],
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_versions = {
        "darwin-x86_64": "15.0.7",
        "linux-aarch64": "18.1.2",
        "": "17.0.6",
    },
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# golang
bazel_dep(name = "rules_go", version = "0.47.1")
bazel_dep(name = "gazelle", version = "0.36.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.3")

# kotlin
bazel_dep(name = "rules_kotlin", version = "1.9.5")
bazel_dep(name = "rules_graalvm", version = "0.11.1")

# rules_graalvm hasn't yet published 0.11.2 to BCR
archive_override(
    module_name = "rules_graalvm",
    integrity = "sha256-JweZfVu+CFIYM0Q78qJpUbyj+uBbb/l8983xDK0/vCA=",
    strip_prefix = "rules_graalvm-7c53c1a1ddf82fd775be2fc62d22783ec2ba4326",
    urls = ["https://github.com/sgammon/rules_graalvm/archive/7c53c1a1ddf82fd775be2fc62d22783ec2ba4326.tar.gz"],
)

gvm = use_extension("@rules_graalvm//:extensions.bzl", "graalvm")
gvm.graalvm(
    name = "graalvm",
    distribution = "ce",  # `oracle`, `ce`, or `community`
    java_version = "22",  # `17`, `20`, `21`, or `22` as supported by the version provided
    version = "24.0.1",  # gvm sdk version format like `24.x.x` also supported
)
use_repo(gvm, "graalvm")

register_toolchains("@graalvm//:jvm")

register_toolchains("@graalvm//:sdk")

bazel_dep(name = "rules_jvm_external", version = "6.1")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "com.github.oshi:oshi-core:6.6.0",
    ],
)
use_repo(maven, "maven")

# rust
bazel_dep(name = "rules_rust", version = "0.44.0")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    sha256s = {
        "rustc-1.78.0-aarch64-apple-darwin.tar.xz": "7f6e7e0800711aded0a35349bd2e1efcb1eaf8c2f080693a69f252195290c888",
        "clippy-1.78.0-aarch64-apple-darwin.tar.xz": "6ed693740cd5e1546ff3e0d92279742e25fd3d8fcf566d0b3d12a1b3a3a39237",
        "cargo-1.78.0-aarch64-apple-darwin.tar.xz": "76b9a39eea441b31c6b26cc58ebff7095a64bc60788254c2525e752a1149688d",
        "llvm-tools-1.78.0-aarch64-apple-darwin.tar.xz": "491a52cddfb2121a2f5a450d0317e56150259d27ac47d7cb41471c3fe18d8e79",
        "rust-std-1.78.0-aarch64-apple-darwin.tar.xz": "4ab399e983e6f4b21687010842774e5b7c679641360b0b85ac9b27a426bec4c1",
    },
    versions = ["1.78.0"],
)

crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.spec(
    package = "libc",
    version = "0.2.154",
)
crate.from_specs(name = "crates")
use_repo(crate, "crates")

# ruby
bazel_dep(name = "rules_ruby", version = "0.10.0")

ruby = use_extension("@rules_ruby//ruby:extensions.bzl", "ruby")
ruby.toolchain(
    name = "ruby",
    version = "3.3.1",
)
ruby.bundle_fetch(
    name = "bundle",
    gem_checksums = {
        "ast-2.4.2": "1e280232e6a33754cde542bc5ef85520b74db2aac73ec14acef453784447cc12",
        "ffi-1.16.3": "6d3242ff10c87271b0675c58d68d3f10148fabc2ad6da52a18123f06078871fb",
        "json-2.7.2": "1898b5cbc81cd36c0fd4d0b7ad2682c39fb07c5ff682fc6265f678f550d4982c",
        "language_server-protocol-3.17.0.3": "3d5c58c02f44a20d972957a9febe386d7e7468ab3900ce6bd2b563dd910c6b3f",
        "parallel-1.24.0": "5bf38efb9b37865f8e93d7a762727f8c5fc5deb19949f4040c76481d5eee9397",
        "parser-3.3.1.0": "78f3e62b925500409e8cc2006c638e454c864be728790bd80accf04b68290244",
        "racc-1.7.3": "b785ab8a30ec43bce073c51dbbe791fd27000f68d1c996c95da98bf685316905",
        "rainbow-3.1.1": "039491aa3a89f42efa1d6dec2fc4e62ede96eb6acd95e52f1ad581182b79bc6a",
        "regexp_parser-2.9.0": "81a00ba141cec0d4b4bf58cb80cd9193e5180836d3fa6ef623f7886d3ba8bdd9",
        "rexml-3.2.6": "e0669a2d4e9f109951cb1fde723d8acd285425d81594a2ea929304af50282816",
        "rubocop-1.63.4": "abae93da9dc08f4fce8eeb50a5c58ad1cf84b8c9ad0ccdeabe1a7ae6ad1bd229",
        "rubocop-ast-1.31.3": "1b07d618d8776993ec6053a706d1c09f0bf15139fd69415924656cbff07e7818",
        "ruby-progressbar-1.13.0": "80fc9c47a9b640d6834e0dc7b3c94c9df37f08cb072b7761e4a71e22cff29b33",
        "unicode-display_width-2.5.0": "7e7681dcade1add70cb9fda20dd77f300b8587c81ebbd165d14fd93144ff0ab4",
    },
    gemfile = "//src/rb:Gemfile",
    gemfile_lock = "//src/rb:Gemfile.lock",
)
use_repo(ruby, "bundle", "ruby", "ruby_toolchains")

register_toolchains("@ruby_toolchains//:all")

# python
bazel_dep(name = "rules_python", version = "0.32.2")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.12",
)

# swift

bazel_dep(name = "rules_swift", version = "1.18.0", repo_name = "build_bazel_rules_swift")

# zig
bazel_dep(name = "rules_zig", version = "0.4.0")

zig = use_extension(
    "@rules_zig//zig:extensions.bzl",
    "zig",
)
zig.toolchain(zig_version = "0.12.0")
